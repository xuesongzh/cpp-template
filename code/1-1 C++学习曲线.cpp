
#include <iostream>

int main() {
    /*
    一：总述
    《C++新经典》
    二：课程简单介绍
    希望学习C++模板与泛型编程、元编程  中高级C++开发者
    解决各种模板与泛型编程中的语法问题。
    C++11/14/17新标准各种模板开发技术。
    模板与泛型编程 比较难
    前提知识：《C++从入门到精通》2-3，重复讲述。
    三：C++学习曲线
    《C语言入门》《C++从入门到精通C++11/14/17》《C++对象模型探索》，《C++模板与泛型编程》
    （3.1）学习C++的时间都花在哪里了
        a)基本的知识体系构建：基础的C++开发知识。捷径？有
        b)逻辑思维的全面提升：也称为解决问题实际能力的全面提升：预知各种复杂情形的发生，给出完美解决方案直到最后交付高质量代码。
        常年累月：阅读代码，动手写项目代码，认真思考，总结，再学习再实践
        5-10年，每天不停的锤炼，才能达到一定的水准。这个世界很多知识是需要时间来解决的。
        内功：基础
    （3.2）C++知识体系详解
        a)C++基础知识体系——C++知识本身
            C语言/C++语言，简单的模板编程和运用vector,list,map,基本概念：堆，栈。基本的数据结构：堆栈、队列、链表
            算法和数据结构：
            基础知识范畴？代表着基础知识是否牢固？
            用到算法的场合不多。
            1)花费大量时间研究算法和数据结构不划算。只有确定要搞算法和数据结构这方面工作才需要投入大量时间学习。
            2)去一些大企业，会考算法题。根据经验人士的建议，来进行学习。
        b)C++高级知识体系详解
            C++对象模型
            设计模式：通过增加代码的复杂性来换取代码灵活性的技术
            C++模板与泛型编程：C++标准库，Boost库
        c)老师能够为大家做的事情
            C++学习难在哪里：1：搞不清楚学习顺序。2：找不到难度适中的学习资料；3：找不到好老师
            c.1)C++学习初始阶段，停止阅读一切C++巨著，只选择老师的《C语言入门》《C++从入门到精通》，增加5年C++开发功力。
            c.2)C++大师的开发者，《C++对象模型探索》
            先看视频教程，不要做题或者尽量少做题。整个课程全部学完一起做题或者通过一个具体项目来达到做题的效果。
            开始阶段只看老师的视频课程，其他课程视频，书籍，一律不学。深深体会两点：大多数的内容老师都讲过；老师讲解的通俗易懂得多。
        d)老师的所思所想：
            二十多年一线开发经验甄别最有用的知识讲述给大家
            讲课天赋

   （3.3）C++相关领域知识的学习概述
    */
    return 0;
};
